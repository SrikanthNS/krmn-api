{"version":3,"sources":["common/AuthVerify.js","http-common.js","services/auth-header.js","services/client.service.js","slices/message.js","slices/clients.js","services/task.service.js","slices/tasks.js","services/user.service.js","slices/users.js","components/Tasks/TaskForm.js","components/Tasks/AddTask.js","components/Tasks/Task.js","components/Tasks/TasksList.js","common/EventBus.js","components/BoardAdmin.js","components/BoardModerator.js","components/Home.js","services/auth.service.js","slices/auth.js","components/Login.js","components/Profile.js","components/Register.js","components/clients/ClientList.js","components/clients/ClientForm.js","components/clients/AddClient.js","components/clients/Client.js","components/users/User.js","components/users/StaffList.js","App.js","store.js","index.js","helpers/history.js"],"names":["AuthVerify","props","history","listen","user","JSON","parse","localStorage","getItem","token","Buffer","from","split","e","parseJwt","accessToken","exp","Date","now","logOut","axios","create","baseURL","headers","authHeader","Authorization","ClientService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","findByName","name","messageSlice","createSlice","initialState","reducers","setMessage","state","action","message","payload","clearMessage","reducer","actions","createClient","createAsyncThunk","thunkAPI","a","res","response","toString","dispatch","rejectWithValue","retrieveClients","updateClient","deleteClient","deleteAllClients","findClientByName","extraReducers","fulfilled","push","index","findIndex","Task","splice","downloadAllTasks","responseType","then","outputFilename","toJSON","slice","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","console","log","catch","error","TaskService","findByDesc","desc","getCurrentUserTasks","createTask","description","minutesSpent","date","completed","clientId","reviewerId","taskType","billingCategory","retrieveTasks","downloadTasks","retrieveCurrentUserTasks","updateTask","deleteTask","deleteAllTasks","findTasksByTitle","UserService","getPublicContent","getUserBoard","getModeratorBoard","getAdminBoard","retrieveReviewers","retrieveAllUsers","findUserByName","updateUser","reviewers","users","TaskForm","clients","useSelector","client","useState","taskStatus","updateStatus","initialTaskState","moment","format","task","setTask","loading","setLoading","useDispatch","useEffect","handleInputChange","event","target","value","handleStatus","preventDefault","validationSchema","Yup","shape","required","initialValues","onSubmit","formValues","saveTask","className","role","htmlFor","as","map","component","type","onChange","onClick","defaultChecked","username","AddTask","submitted","setSubmitted","taskList","setTaskList","unwrap","initFetch","useCallback","style","display","flexDirection","eachTask","currentTask","setCurrentTask","match","params","TaskDataService","undefined","status","selected","TasksList","searchTitle","setSearchTitle","tasks","currentUser","auth","showUserCol","setShowUserCol","roles","includes","findByTitle","placeholder","onKeyPress","code","class","scope","colSpan","clientName","reviewerName","userName","reviewer","userId","to","window","confirm","length","eventBus","on","callback","addEventListener","detail","dispatchEvent","CustomEvent","removeEventListener","BoardAdmin","content","setContent","_content","EventBus","BoardModerator","Home","color","authService","register","email","password","login","setItem","stringify","logout","removeItem","AuthService","isLoggedIn","rejected","Login","src","alt","formValue","location","reload","disabled","Profile","Register","successful","setSuccessful","test","val","ClientList","searchName","setSearchName","ClientForm","saveClient","AddClient","clientList","setClientList","eachClient","Client","currentClient","setCurrentClient","User","setCurrentUser","StaffList","App","showAdminBoard","setShowAdminBoard","Fragment","capitalize","exact","path","authReducer","messageReducer","tasksReducer","userReducer","clientReducer","store","configureStore","devTools","ReactDOM","render","basename","getElementById","createBrowserHistory"],"mappings":"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","file":"static/js/main.04c6a59b.chunk.js","sourcesContent":["import React from \"react\";\nimport { history } from '../helpers/history';\n\nconst parseJwt = (token) => {\n    try {\n        return JSON.parse(Buffer.from(token.split(\".\")[1], 'base64'));\n    } catch (e) {\n        return null;\n    }\n};\n\nconst AuthVerify = (props) => {\n    history.listen(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n\n        if (user) {\n            const decodedJwt = parseJwt(user.accessToken);\n\n            if (decodedJwt.exp * 1000 < Date.now()) {\n                props.logOut();\n            }\n        }\n    });\n\n    return <div></div>;\n};\n\nexport default AuthVerify;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: '/api',\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return { Authorization: 'Bearer ' + user.accessToken };\n    } else {\n        return {};\n    }\n}","import http from \"../http-common\";\nimport authHeader from \"./auth-header\";\n\nconst getAll = () => {\n    return http.get(\"/clients\", { headers: authHeader() });\n};\n\nconst get = id => {\n    return http.get(`/clients/${id}`, { headers: authHeader() });\n};\n\nconst create = data => {\n    return http.post(\"/clients\", data, { headers: authHeader() });\n};\n\nconst update = (id, data) => {\n    return http.put(`/clients/${id}`, data, { headers: authHeader() });\n};\n\n\nconst remove = id => {\n    return http.delete(`/clients/${id}`, { headers: authHeader() });\n};\n\nconst removeAll = () => {\n    return http.delete(`/clients`, { headers: authHeader() });\n};\n\nconst findByName = name => {\n    return http.get(`/clients?name=${name}`, { headers: authHeader() });\n};\n\nconst ClientService = {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByName,\n};\n\nexport default ClientService;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {};\n\nconst messageSlice = createSlice({\n    name: \"message\",\n    initialState,\n    reducers: {\n        setMessage: (state, action) => {\n            return { message: action.payload };\n        },\n        clearMessage: () => {\n            return { message: \"\" };\n        },\n    },\n});\n\n\nconst { reducer, actions } = messageSlice;\n\nexport const { setMessage, clearMessage } = actions\nexport default reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport ClientService from \"../services/client.service\";\nimport { setMessage } from \"./message\";\n\nconst initialState = [];\n\nexport const createClient = createAsyncThunk(\n    \"client/create\",\n    async ({ name }, thunkAPI) => {\n        try {\n            const res = await ClientService.create({ name });\n            return res.data;\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            thunkAPI.dispatch(setMessage(message));\n            return thunkAPI.rejectWithValue();\n        }\n    }\n);\n\nexport const retrieveClients = createAsyncThunk(\n    \"clients/retrieve\",\n    async () => {\n        const res = await ClientService.getAll();\n        return res.data;\n    }\n);\n\nexport const updateClient = createAsyncThunk(\n    \"clients/update\",\n    async ({ id, data }) => {\n        const res = await ClientService.update(id, data);\n        return res.data;\n    }\n);\n\n\nexport const deleteClient = createAsyncThunk(\n    \"Clients/delete\",\n    async ({ id }) => {\n        await ClientService.remove(id);\n        return { id };\n    }\n);\n\nexport const deleteAllClients = createAsyncThunk(\n    \"Clients/deleteAll\",\n    async () => {\n        const res = await ClientService.removeAll();\n        return res.data;\n    }\n);\n\nexport const findClientByName = createAsyncThunk(\n    \"Clients/findByName\",\n    async ({ name }) => {\n        const res = await ClientService.findByName(name);\n        return res.data;\n    }\n);\n\nconst clientSlice = createSlice({\n    name: \"client\",\n    initialState,\n    extraReducers: {\n        [createClient.fulfilled]: (state, action) => {\n            state.push(action.payload);\n        },\n        [retrieveClients.fulfilled]: (state, action) => {\n            return [...action.payload];\n        },\n        [updateClient.fulfilled]: (state, action) => {\n            const index = state.findIndex(Task => Task.id === action.payload.id);\n            state[index] = {\n                ...state[index],\n                ...action.payload,\n            };\n        },\n        [deleteClient.fulfilled]: (state, action) => {\n            let index = state.findIndex(({ id }) => id === action.payload.id);\n            state.splice(index, 1);\n        },\n        [deleteAllClients.fulfilled]: (state, action) => {\n            return [];\n        },\n        [findClientByName.fulfilled]: (state, action) => {\n            return [...action.payload];\n        }\n    },\n});\n\nconst { reducer } = clientSlice;\nexport default reducer;","import http from \"../http-common\";\nimport authHeader from \"./auth-header\";\n// import fs from 'fs';\n\nconst getAll = () => {\n    return http.get(\"/tasks\", { headers: authHeader() });\n};\n\nconst downloadAllTasks = async () => {\n    return http.get(\"/tasks/download\", {\n        responseType: 'blob',\n        headers: {\n            ...authHeader(), headers:\n            {\n                'Content-Disposition': \"attachment; filename=template.xlsx\",\n                'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n            },\n            responseType: 'arraybuffer',\n        }\n    })\n        .then(async (response) => {\n            try {\n                const outputFilename = `taskList_${new Date().toJSON().slice(0, 10)}.xlsx`;\n                // If you want to download file automatically using link attribute.\n                const url = URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', outputFilename);\n                document.body.appendChild(link);\n                link.click();\n            } catch (e) {\n                console.log(\"🚀 ~ file: task.service.js ~ line 38 ~ .then ~ e\", e.message);\n            }\n            return\n        }).catch((error) => console.log(error));\n\n};\n\nconst getCurrentUserTasks = () => http.get(\"/user/tasks\", { headers: authHeader() });\n\nconst get = id => http.get(`/tasks/${id}`, { headers: authHeader() });\n\n\nconst create = data => http.post(\"/tasks\", data, { headers: authHeader() });\n\nconst update = (id, data) =>\n    http.put(`/tasks/${id}`, data, { headers: authHeader() });\n\n\nconst remove = id =>\n    http.delete(`/tasks/${id}`, { headers: authHeader() });\n\n\nconst removeAll = () =>\n    http.delete(`/tasks`, { headers: authHeader() });\n\n\nconst findByDesc = desc =>\n    http.get(`/tasks?description=${desc}`, { headers: authHeader() });\n\n\nconst TaskService = {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByDesc,\n    getCurrentUserTasks,\n    downloadAllTasks\n};\n\nexport default TaskService;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport TaskService from \"../services/task.service\";\nimport { setMessage } from \"./message\";\n\nconst initialState = [];\n\nexport const createTask = createAsyncThunk(\n  \"task/create\",\n  async (\n    {\n      description,\n      minutesSpent,\n      date,\n      completed,\n      clientId,\n      reviewerId,\n      taskType,\n      billingCategory,\n    },\n    thunkAPI\n  ) => {\n    try {\n      const res = await TaskService.create({\n        description,\n        minutesSpent,\n        date,\n        completed,\n        clientId,\n        reviewerId,\n        taskType,\n        billingCategory,\n      });\n      return res.data;\n    } catch (error) {\n      const message = error.message || error.toString();\n      thunkAPI.dispatch(setMessage(message));\n      return thunkAPI.rejectWithValue();\n    }\n  }\n);\n\nexport const retrieveTasks = createAsyncThunk(\"tasks/retrieve\", async () => {\n  const res = await TaskService.getAll();\n  return res.data;\n});\n\nexport const downloadTasks = createAsyncThunk(\"tasks/download\", async () => {\n  const res = await TaskService.downloadAllTasks();\n  return res.data;\n});\n\nexport const retrieveCurrentUserTasks = createAsyncThunk(\n  \"currentUsertasks/retrieve\",\n  async () => {\n    const res = await TaskService.getAll();\n    return res.data;\n  }\n);\n\nexport const updateTask = createAsyncThunk(\n  \"tasks/update\",\n  async ({ id, data }, thunkAPI) => {\n    try {\n      const res = await TaskService.update(id, data);\n      return res.data;\n    } catch (error) {\n      const message = \"Something is wrong please check all fields\";\n      thunkAPI.dispatch(setMessage(message));\n      return thunkAPI.rejectWithValue();\n    }\n  }\n);\n\nexport const deleteTask = createAsyncThunk(\"Tasks/delete\", async ({ id }) => {\n  await TaskService.remove(id);\n  return { id };\n});\n\nexport const deleteAllTasks = createAsyncThunk(\"Tasks/deleteAll\", async () => {\n  const res = await TaskService.removeAll();\n  return res.data;\n});\n\nexport const findTasksByTitle = createAsyncThunk(\n  \"Tasks/findByTitle\",\n  async ({ description }) => {\n    const res = await TaskService.findByDesc(description);\n    return res.data;\n  }\n);\n\nconst TaskSlice = createSlice({\n  name: \"Task\",\n  initialState,\n  extraReducers: {\n    [createTask.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [retrieveTasks.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [retrieveCurrentUserTasks.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [updateTask.fulfilled]: (state, action) => {\n      const index = state.findIndex((Task) => Task.id === action.payload.id);\n      state[index] = {\n        ...state[index],\n        ...action.payload,\n      };\n    },\n    [deleteTask.fulfilled]: (state, action) => {\n      let index = state.findIndex(({ id }) => id === action.payload.id);\n      state.splice(index, 1);\n    },\n    [deleteAllTasks.fulfilled]: (state, action) => {\n      return [];\n    },\n    [findTasksByTitle.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n  },\n});\n\nconst { reducer } = TaskSlice;\nexport default reducer;\n","import http from \"../http-common\";\nimport authHeader from \"./auth-header\";\n\nconst getPublicContent = () => {\n  return http.get(\"/all\");\n};\n\nconst getUserBoard = () => {\n  return http.get(\"/user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return http.get(\"/mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return http.get(\"/admin\", { headers: authHeader() });\n};\n\nconst retrieveReviewers = () => {\n  return http.get(\"/reviewer\");\n};\n\nconst retrieveAllUsers = () => {\n  return http.get(\"/userList\", { headers: authHeader() });\n};\n\nconst findByName = (name) => {\n  return http.get(`/users?name=${name}`, { headers: authHeader() });\n};\n\nconst update = (id, data) => {\n  return http.put(`/users/${id}`, data, { headers: authHeader() });\n};\n\nconst get = (id) => {\n  console.log(\"🚀 ~ file: user.service.js:37 ~ get ~ id:\", id);\n  return http.get(`/users/${id}`, { headers: authHeader() });\n};\n\nconst UserService = {\n  get,\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n  retrieveReviewers,\n  retrieveAllUsers,\n  findByName,\n  update,\n};\n\nexport default UserService;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport UserService from \"../services/user.service\";\n\nconst initialState = { reviewers: [], users: [] };\n\nexport const retrieveReviewers = createAsyncThunk(\n  \"users/reviewer\",\n  async () => {\n    const res = await UserService.retrieveReviewers();\n    return res.data;\n  }\n);\n\nexport const retrieveAllUsers = createAsyncThunk(\"users/list\", async () => {\n  const res = await UserService.retrieveAllUsers();\n  return res.data;\n});\n\nexport const findUserByName = createAsyncThunk(\n  \"users/findByName\",\n  async ({ name }) => {\n    const res = await UserService.findByName(name);\n    console.log(\"🚀 ~ file: users.js:25 ~ res.data:\", res.data);\n    return res.data;\n  }\n);\n\nexport const updateUser = createAsyncThunk(\n  \"users/update\",\n  async ({ id, data }) => {\n    const res = await UserService.update(id, data);\n    return res.data;\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  extraReducers: {\n    [retrieveReviewers.fulfilled]: (state, action) => {\n      state.reviewers = action.payload;\n    },\n    [retrieveAllUsers.fulfilled]: (state, action) => {\n      state.users = action.payload;\n    },\n    [findUserByName.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [updateUser.fulfilled]: (state, action) => {\n      const index = state.findIndex((Task) => Task.id === action.payload.id);\n      state[index] = {\n        ...state[index],\n        ...action.payload,\n      };\n    },\n  },\n});\n\nconst { reducer } = userSlice;\nexport default reducer;\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport moment from 'moment';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { clearMessage } from \"../../slices/message\";\n\nexport const TaskForm = (props) => {\n    const clients = useSelector(state => state.client);\n    const { reviewers } = useSelector(state => state.user);\n    const [taskStatus, updateStatus] = useState(false);\n    const todaysDate = moment().format('YYYY-MM-DD');\n    const initialTaskState = {\n        description: \"\",\n        completed: false,\n        date: todaysDate,\n        clientId: \"\",\n        reviewerId: null,\n        minutesSpent: \"\",\n        taskType: \"\",\n        billingCategory: \"\"\n    };\n    const [task, setTask] = useState(initialTaskState);\n    const [loading, setLoading] = useState(false);\n    const { message } = useSelector((state) => state.message);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(clearMessage());\n    }, [dispatch]);\n\n\n\n    const saveTask = (formValues) => {\n        const { description, minutesSpent, clientId, taskType, billingCategory } = formValues\n        setLoading(true)\n        props.saveTask({ ...task, description, minutesSpent, clientId, taskType, billingCategory}).then(() => {\n            setLoading(false);\n        })\n    }\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setTask({ ...task, [name]: value });\n    };\n\n    const handleStatus = (e, value) => {\n        e.preventDefault();\n        updateStatus(value);\n        setTask({ ...task, completed: value });\n    };\n\n    const validationSchema = Yup.object().shape({\n        clientId: Yup.string().required(\"Please choose the Client\"),\n        description: Yup.string().required(\"Please enter the Task Description\"),\n        minutesSpent: Yup.number().required(\"Please enter the Time Spent\"),\n        taskType: Yup.string().required(\"Please choose Task Type\"),\n        billingCategory: Yup.string().required(\"Please choose Billing Category\")\n    });\n    return (\n\n        <Formik\n            initialValues={initialTaskState}\n            validationSchema={validationSchema}\n            onSubmit={saveTask}\n        >\n            <Form>\n                <div>\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"clientId\">Choose client<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n\n                        <Field as=\"select\" className=\"form-control\" name=\"clientId\" id=\"clientId\">\n                            <option value=\"\">Select Client</option>\n                            {clients.map(e =>\n                                <option key={`client-${e.id}`} value={e.id}>{e.name}</option>\n                            )}\n                        </Field>\n                        <ErrorMessage\n                            name=\"clientId\"\n                            component=\"div\"\n                            className=\"alert alert-danger\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"taskDate\">Date<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n                        <input className=\"form-control\" type=\"date\" value={task.date} id=\"taskDate\" name=\"date\" onChange={handleInputChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"taskType\">Choose Task Type<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n\n                        <Field as=\"select\" className=\"form-control\" name=\"taskType\" id=\"taskType\">\n                            <option value=\"\">Select Task Type</option>\n                            <option key='type-1' value=\"Income Tax\">Income Tax</option>\n                            <option key='type-2' value=\"GST\">GST</option>\n                            <option key='type-3' value=\"MCA\">MCA</option>\n                            <option key='type-4' value=\"FEMA\">FEMA</option>\n                            <option key='type-5' value=\"DGFT\">DGFT</option>\n                            <option key='type-6' value=\"Others\">Others</option>\n                        </Field>\n                        <ErrorMessage\n                            name=\"taskType\"\n                            component=\"div\"\n                            className=\"alert alert-danger\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"billingCategory\">Choose Billing Category<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n\n                        <Field as=\"select\" className=\"form-control\" name=\"billingCategory\" id=\"billingCategory\">\n                            <option value=\"\">Select Billing Category</option>\n                            <option key='billing-cat-1' value=\"Billable\">Billable</option>\n                            <option key='billing-cat-2' value=\"Non-Billable\">Non-Billable</option>\n                            <option key='billing-cat-3' value=\"Retainer\">Retainer</option>\n                        </Field>\n                        <ErrorMessage\n                            name=\"billingCategory\"\n                            component=\"div\"\n                            className=\"alert alert-danger\"\n                        />\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n                        <Field\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"description\"\n                            name=\"description\"\n                        />\n                        <ErrorMessage\n                            name=\"description\"\n                            component=\"div\"\n                            className=\"alert alert-danger\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"minutesSpent\">Time Spent<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n                        <Field type=\"number\" className=\"form-control\" id=\"minutesSpent\"\n                            name=\"minutesSpent\" />\n\n                        <ErrorMessage\n                            name=\"minutesSpent\"\n                            component=\"div\"\n                            className=\"alert alert-danger\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Status<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n                        <button\n                            className=\"btn btn-md btn-info mr-2\"\n                            onClick={(e) => handleStatus(e, !taskStatus)}\n                        >\n                            In-progress {!taskStatus && < input type=\"checkbox\" defaultChecked />}\n                        </button>\n                        <button\n                            className=\"btn btn-md mr-2 btn-primary\"\n                            onClick={(e) => handleStatus(e, !taskStatus)}\n                        >\n                            completed {taskStatus && < input type=\"checkbox\" defaultChecked />}\n                        </button>\n                    </div>\n                    {taskStatus && <div className=\"form-group\">\n                        <label htmlFor=\"reviewers\">Reviewer By: <small className=\"text-center text-muted\">\n                            (optional)</small>: </label>\n\n                        <select className=\"form-control\" onChange={handleInputChange} name=\"reviewerId\" id=\"reviewers\">\n                            <option value={null}>Select Reviewer</option>\n                            {reviewers.map(e =>\n                                <option key={`reviewer-${e.id}`} value={e.id}>{e.username}</option>\n                            )}\n                        </select>\n                    </div>}\n\n\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                            {loading && !message && (\n                                <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                            <span>Submit</span>\n                        </button>\n                    </div>\n                </div ></Form></Formik>)\n}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { retrieveClients } from '../../slices/clients';\nimport { createTask } from \"../../slices/tasks\";\nimport { retrieveReviewers } from '../../slices/users';\n// import AddIcon from '@mui/icons-material/Add';\nimport { TaskForm } from \"./TaskForm\";\n\nconst AddTask = () => {\n    const [submitted, setSubmitted] = useState(false);\n    const [taskList, setTaskList] = useState([]);\n    const dispatch = useDispatch();\n\n    const saveTask = (task) => {\n        const { description, completed, date, minutesSpent, reviewerId, clientId, taskType, billingCategory } = task;\n        dispatch(createTask({ description, date, completed, minutesSpent, reviewerId, clientId, taskType, billingCategory }))\n            .unwrap()\n            .then(() => {\n                setTaskList([]);\n                setSubmitted(true);\n            })\n            .catch(e => {\n                console.log(\"🚀 ~ file: AddTask.js ~ line 34 ~ saveTask ~ e\", e.message)\n            });\n    };\n\n    const initFetch = useCallback(async () => {\n        dispatch(retrieveClients());\n        dispatch(retrieveReviewers());\n        setTaskList([<TaskForm key=\"task-1\" saveTask={saveTask} />]);\n    }, [dispatch])\n\n    useEffect(() => {\n        initFetch();\n    }, [initFetch])\n\n\n    const newTask = () => {\n        setTaskList([...taskList, <TaskForm key=\"task1\" saveTask={saveTask} />]);\n        setSubmitted(false);\n    };\n\n\n\n    return (\n        <div className=\"col-md-12 table-responsive-md\">\n            <h4>New Task</h4>\n            <hr></hr>\n            <div className=\"submit-form\" >\n                {submitted ? (\n                    <div>\n                        <h4>You submitted successfully!</h4>\n                        <button className=\"btn btn-success\" onClick={(clients, reviewers) => newTask()}>\n                            Add\n                        </button>\n                    </div>\n                ) :\n                    (<div className=\"row\">\n                        {/* <div >\n                        <button className=\"btn btn-success\" onClick={newTask}>\n                            Add <AddIcon />\n                        </button>\n                    </div> */}\n                        <div className=\"col-md-12\" style={{ display: 'flex', flexDirection: 'column' }} >\n                            {taskList.map(eachTask => eachTask)}\n                        </div>\n                    </div >)\n                }\n\n            </div >\n        </div>\n\n    );\n};\n\nexport default AddTask;","import React, { useEffect, useState } from \"react\";\nimport moment from 'moment';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TaskDataService from \"../../services/task.service\";\nimport { deleteTask, updateTask } from \"../../slices/tasks\";\n\nconst Task = (props) => {\n    const initialTaskState = {\n        id: null,\n        clientId: null,\n        date: null,\n        description: \"\",\n        minutesSpent: null,\n        completed: false,\n        reviewerId: null,\n        taskType: \"\",\n        billingCategory: \"\"\n    };\n\n    const clients = useSelector(state => state.client);\n    const { reviewers } = useSelector(state => state.user);\n    const [currentTask, setCurrentTask] = useState(initialTaskState);\n    const [message, setMessage] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const getTask = id => {\n        TaskDataService.get(id)\n            .then(response => {\n                setCurrentTask(\n                    { ...response.data, ...((response.data?.taskType === undefined || null) && { taskType: '' }) });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getTask(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCurrentTask({ ...currentTask, [name]: value });\n    };\n\n    const updateStatus = status => {\n\n        const data = {\n            id: currentTask.id,\n            clientId: currentTask.clientId,\n            reviewerId: currentTask.reviewerId,\n            description: currentTask.description,\n            completed: status,\n            minutesSpent: currentTask.minutesSpent,\n            date: currentTask.date,\n            taskType: currentTask.taskType,\n            billingCategory: currentTask.billingCategory\n        };\n\n        dispatch(updateTask({ id: currentTask.id, data }))\n            .unwrap()\n            .then(response => {\n                console.log(response);\n                setCurrentTask({ ...currentTask, completed: status, ...(!status && { reviewerId: null }) });\n                setMessage(\"The status was updated successfully!\");\n            })\n            .catch(e => {\n                setMessage(e.message);\n                console.log(e);\n            });\n    };\n\n    const updateContent = () => {\n        dispatch(updateTask({ id: currentTask.id, data: currentTask }))\n            .unwrap()\n            .then(response => {\n                console.log(response);\n                setMessage(\"The task was updated successfully!\");\n            })\n            .catch(e => {\n                setMessage(e.message);\n                console.log(e.message);\n            });\n    };\n\n    const removeTask = () => {\n        dispatch(deleteTask({ id: currentTask.id }))\n            .unwrap()\n            .then(() => {\n                props.history.push(\"/tasks\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div className=\"col-md-12 table-responsive-md\">\n            <h4>Edit Task</h4>\n            <hr></hr>\n            {currentTask ? (\n                < div className=\"edit-form\">\n\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"client\">Choose client:</label>\n\n                            <select className=\"form-control\" onChange={handleInputChange} name=\"clientId\" id=\"clients\">\n                                <option value=\"\">Select Client</option>\n                                {clients.map(e =>\n                                    <option key={`client-${e.id}`} selected={currentTask.clientId === e.id} value={e.id}>{e.name}</option>\n                                )}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"taskDate\">Date:</label>\n                            <input className=\"form-control\" type=\"date\" value={moment(currentTask.date).format(('YYYY-MM-DD'))} id=\"taskDate\" name=\"date\" onChange={handleInputChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"taskType\">Choose Task Type<sup className=\"text-center text-danger\">\n                                *</sup>:</label>\n\n                            <select className=\"form-control\" onChange={handleInputChange} name=\"taskType\" id=\"taskType\">\n                                <option selected={currentTask.taskType === \"\"} value=\"\">Select Task Type</option>\n                                <option selected={currentTask.taskType === \"Income Tax\"} key='type-1' value=\"Income Tax\">Income Tax</option>\n                                <option selected={currentTask.taskType === \"GST\"} key='type-2' value=\"GST\">GST</option>\n                                <option selected={currentTask.taskType === \"MCA\"} key='type-3' value=\"MCA\">MCA</option>\n                                <option selected={currentTask.taskType === \"FEMA\"} key='type-4' value=\"FEMA\">FEMA</option>\n                                <option selected={currentTask.taskType === \"DGFT\"} key='type-5' value=\"DGFT\">DGFT</option>\n                                <option selected={currentTask.taskType === \"Others\"} key='type-6' value=\"Others\">Others</option>\n                            </select>\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"billingCategory\">Choose Billing Category<sup className=\"text-center text-danger\">\n                                *</sup>:</label>\n\n                            <select className=\"form-control\" onChange={handleInputChange} name=\"billingCategory\" id=\"billingCategory\">\n                                <option selected={!currentTask?.billingCategory} value=\"\">Select Billing Category</option>\n                                <option selected={currentTask?.billingCategory === \"Billable\"}     key='billing-cat-1' value=\"Billable\">Billable</option>\n                                <option selected={currentTask?.billingCategory === \"Non-Billable\"} key='billing-cat-2' value=\"Non-Billable\">Non-Billable</option>\n                                <option selected={currentTask?.billingCategory === \"Retainer\"}     key='billing-cat-3' value=\"Retainer\">Retainer</option>\n                            </select>\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                name=\"description\"\n                                value={currentTask.description}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"minutesSpent\">Time Spent:</label>\n                            <input\n                                type=\"number\"\n                                className=\"form-control\"\n                                id=\"minutesSpent\"\n                                required\n                                value={currentTask.minutesSpent || ''}\n                                onChange={handleInputChange}\n                                name=\"minutesSpent\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>\n                                <strong>Status:</strong>\n                            </label>\n                            {currentTask.completed ? \"Completed\" : \"In-progress\"}\n                        </div>\n                        {currentTask.completed && <div className=\"form-group\">\n                            <label htmlFor=\"reviewers\">Reviewer:</label>\n\n                            <select className=\"form-control\" onChange={handleInputChange} name=\"reviewerId\" id=\"reviewers\">\n                                <option value={null}>Select Reviewer</option>\n                                {reviewers.map(e =>\n                                    <option selected={currentTask.reviewerId === e.id} key={`reviewer-${e.id}`} value={e.id}>{e.username}</option>\n                                )}\n                            </select>\n                        </div>}\n                    </form>\n\n                    {currentTask.completed ? (\n                        <button\n                            className=\"btn btn-md btn-primary mr-2\"\n                            onClick={() => updateStatus(false)}\n                        >\n                            In-Progress\n                        </button>\n                    ) : (\n                        <button\n                            className=\"btn btn-md btn-info mr-2\"\n                            onClick={() => updateStatus(true)}\n                        >\n                            Completed\n                        </button>\n                    )}\n\n                    <button className=\"btn btn-md btn-danger mr-2\" onClick={removeTask}>\n                        Delete\n                    </button>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-md mr-2 btn-success\"\n                        onClick={updateContent}\n                    >\n                        Update\n                    </button>\n                    <p>{message}</p>\n                </div>\n            ) : (\n                <div>\n                    <br />\n                    <p>Please click on a Task to view...</p>\n                </div>\n            )\n            }\n        </div >\n    );\n};\n\nexport default Task;","import moment from 'moment';\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { retrieveClients } from '../../slices/clients';\nimport {\n    deleteAllTasks, deleteTask, findTasksByTitle, retrieveTasks, downloadTasks\n} from \"../../slices/tasks\";\nimport { retrieveReviewers, retrieveAllUsers } from '../../slices/users';\n\n\nconst TasksList = () => {\n    const [searchTitle, setSearchTitle] = useState(\"\");\n    const tasks = useSelector(state => state.tasks);\n    const clients = useSelector(state => state.client);\n    const { reviewers, users } = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    const { user: currentUser } = useSelector((state) => state.auth);\n    const [showUserCol, setShowUserCol] = useState(false);\n\n    const onChangeSearchTitle = e => {\n        const searchTitle = e.target.value;\n        setSearchTitle(searchTitle);\n    };\n\n    const initFetch = useCallback(() => {\n        dispatch(retrieveClients());\n        dispatch(retrieveReviewers());\n        dispatch(retrieveAllUsers());\n        dispatch(retrieveTasks());\n    }, [dispatch])\n\n    useEffect(() => {\n        if (currentUser && currentUser.roles.includes(\"ROLE_ADMIN\")) {\n            setShowUserCol(true);\n        } else {\n            setShowUserCol(false);\n        }\n    }, [currentUser]);\n\n    useEffect(() => {\n        initFetch()\n    }, [initFetch])\n\n    const removeTask = (id) => {\n        if (!window.confirm(\"Are you sure you want to delete the task ?\")) {\n            return\n        }\n        dispatch(deleteTask({ id }))\n            .unwrap()\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const removeAllTasks = () => {\n        if (!window.confirm(\"Are you sure you want to delete all tasks ?\")) {\n            return\n        }\n        dispatch(deleteAllTasks())\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const findByTitle = () => {\n        dispatch(findTasksByTitle({ description: searchTitle }));\n    };\n\n    const download = () => {\n        dispatch(downloadTasks());\n    };\n\n\n    const onSearchSubmit = e => {\n        if (e.code === 'Enter') {\n            findByTitle();\n        }\n    };\n\n    return (\n        <div className=\" row\">\n            <div className=\"col-md-12\">\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by description\"\n                        value={searchTitle}\n                        onChange={onChangeSearchTitle}\n                        onKeyPress={onSearchSubmit}\n                    />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={findByTitle}\n                        >\n                            Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-12\">\n                <h4>Task List</h4>\n            </div>\n            <div className=\"col-md-12 table-responsive-md\">\n                {tasks &&\n                    <div>\n\n                        <div className=\"d-flex justify-content-end\">\n                            <button\n                                className=\"m-3 btn btn-sm btn-success\"\n                                type=\"button\"\n                                onClick={download}\n                            >\n                                Download Excel\n                            </button>\n                        </div>\n                        <div class=\"tableFixHead\">\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">\n                                            #\n                                        </th>\n                                        {showUserCol && <th scope=\"col\">\n                                            User\n                                        </th>}\n                                        <th scope=\"col\">\n                                            Client\n                                        </th>\n                                        <th scope=\"col\">\n                                            Type\n                                        </th>\n                                        <th scope=\"col\">\n                                            Category\n                                        </th>\n                                        <th scope=\"col\">\n                                            Desc\n                                        </th>\n                                        <th scope=\"col\">\n                                            Date\n                                        </th>\n                                        <th scope=\"col\">\n                                            Time Spent\n                                        </th>\n                                        <th scope=\"col\">\n                                            Status\n                                        </th>\n                                        <th scope=\"col\">\n                                            Reviewer\n                                        </th>\n                                        <th scope=\"col\" colSpan=\"2\">\n                                            Actions\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody >\n                                    {tasks.map((task, index) => {\n                                        let clientName = \"\";\n                                        clients.map(client => {\n                                            if (client.id === task.clientId) {\n                                                clientName = client.name;\n                                            }\n                                            return true\n                                        });\n                                        let reviewerName = \"\";\n                                        let userName = \"\";\n                                        reviewers.map(reviewer => {\n                                            if (reviewer.id === task.reviewerId) {\n                                                reviewerName = reviewer.username;\n                                            }\n                                            return true\n                                        });\n\n                                        showUserCol && users.map(user => {\n                                            if (user.id === task.userId) {\n                                                userName = user.username;\n                                            }\n                                            return true\n                                        })\n\n                                        return (\n                                            <tr key={`task-row-${index}`} className={\n                                                (task.completed ? \"table-success\" : \"table-warning\")\n                                            }>\n                                                <td>\n                                                    {index + 1}\n                                                </td>\n                                                {showUserCol && <td>\n                                                    {userName}\n                                                </td>}\n                                                <td>\n                                                    {clientName}\n                                                </td>\n                                                <td>\n                                                    {task?.taskType ? task.taskType : ''}\n                                                </td>\n                                                <td>\n                                                    {task?.billingCategory ? task.billingCategory : ''}\n                                                </td>\n                                                <td>\n                                                    {task.description}\n                                                </td>\n                                                <td>\n                                                    {moment(task.date).format('DD/MM/yyyy')}\n                                                </td>\n                                                <td>\n                                                    {task.minutesSpent} mins\n                                                </td>\n                                                <td>\n                                                    {task.completed ? \"Completed\" : \"In-Progress\"}\n                                                </td>\n                                                <td>\n                                                    {reviewerName}\n                                                </td>\n                                                <td colSpan=\"2\">\n                                                    <div style={{ display: 'inline-flex' }}>\n                                                        <Link\n                                                            to={\"/tasks/\" + task.id}\n                                                            className=\"btn btn-sm btn-warning mr-2 mt-0\"\n                                                        >\n                                                            Edit\n                                                        </Link>\n                                                        <button className=\"btn btn-sm btn-danger mr-2 mt-0\" onClick={() => removeTask(task.id)}>\n                                                            Delete\n                                                        </button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                }\n            </div >\n            <div className=\"col-md-12 table-responsive-md\">\n                {\n                    tasks.length === 0 ?\n\n                        <div className=\"d-flex justify-content-center\">\n                            <h5 className=\"text-center text-info\">\n                                No Records Found\n                            </h5>\n                        </div>\n                        :\n                        <div className=\"d-flex justify-content-end\">\n\n                            <button\n                                className=\"m-3 btn btn-sm btn-danger\"\n                                onClick={removeAllTasks}\n                            >\n                                Remove All\n                            </button>\n                        </div>\n\n                }\n            </div >\n        </div >\n    );\n};\n\nexport default TasksList;","const eventBus = {\n    on(event, callback) {\n        document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n        document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n        document.removeEventListener(event, callback);\n    },\n};\n\nexport default eventBus;","import React, { useEffect, useState } from \"react\";\nimport EventBus from \"../common/EventBus\";\nimport UserService from \"../services/user.service\";\n\n\nconst BoardAdmin = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getAdminBoard().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n                if (error.response && error.response.status === 401) {\n                    EventBus.dispatch(\"logout\");\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default BoardAdmin;\n","import React, { useEffect, useState } from \"react\";\nimport EventBus from \"../common/EventBus\";\nimport UserService from \"../services/user.service\";\n\nconst BoardModerator = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getModeratorBoard().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n                if (error.response && error.response.status === 401) {\n                    EventBus.dispatch(\"logout\");\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default BoardModerator;\n","import React from \"react\";\n// import UserService from \"../services/user.service\";\n\nconst Home = () => {\n  // const [content, setContent] = useState(\"\");\n\n  // useEffect(() => {\n  //     UserService.getPublicContent().then(\n  //         (response) => {\n  //             setContent(response.data);\n  //         },\n  //         (error) => {\n  //             const _content =\n  //                 (error.response && error.response.data) ||\n  //                 error.message ||\n  //                 error.toString();\n\n  //             setContent(_content);\n  //         }\n  //     );\n  // }, []);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Thought for the Day!</h5>\n            <p className=\"card-text\">\n              Failures are the stepping stones for{\" \"}\n              <span style={{ color: \"green\" }}>success</span>\n            </p>\n            <button href=\"#\" className=\"btn btn-primary\">\n              Have a nice day\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Action Items for December</h5>\n            <p className=\"card-text\">\n              With supporting text below as a natural lead-in to additional\n              content.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import http from \"../http-common\";\n\nconst register = (username, email, password) => {\n    return http.post(\"auth/signup\", {\n        username,\n        email,\n        password,\n    });\n};\n\nconst login = (username, password) => {\n    return http\n        .post(\"auth/signin\", {\n            username,\n            password,\n        })\n        .then((response) => {\n            if (response.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n\n            return response.data;\n        });\n};\n\nconst logout = () => {\n    localStorage.removeItem(\"user\");\n};\n\n\nconst authService = {\n    register,\n    login,\n    logout,\n};\n\nexport default authService;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./message\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport const register = createAsyncThunk(\n    \"auth/register\",\n    async ({ username, email, password }, thunkAPI) => {\n        try {\n            const response = await AuthService.register(username, email, password);\n            thunkAPI.dispatch(setMessage(response.data.message));\n            return response.data;\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            thunkAPI.dispatch(setMessage(message));\n            return thunkAPI.rejectWithValue();\n        }\n    }\n);\n\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ username, password }, thunkAPI) => {\n        try {\n            const data = await AuthService.login(username, password);\n            return { user: data };\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            thunkAPI.dispatch(setMessage(message));\n            return thunkAPI.rejectWithValue();\n        }\n    }\n);\n\nexport const logout = createAsyncThunk(\"auth/logout\", () => {\n    AuthService.logout();\n});\n\n\nconst initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    extraReducers: {\n        [register.fulfilled]: (state, action) => {\n            state.isLoggedIn = false;\n        },\n        [register.rejected]: (state, action) => {\n            state.isLoggedIn = false;\n        },\n        [login.fulfilled]: (state, action) => {\n            state.isLoggedIn = true;\n            state.user = action.payload.user;\n        },\n        [login.rejected]: (state, action) => {\n            state.isLoggedIn = false;\n            state.user = null;\n        },\n        [logout.fulfilled]: (state, action) => {\n            state.isLoggedIn = false;\n            state.user = null;\n        },\n    },\n});\n\nconst { reducer } = authSlice;\nexport default reducer;","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { login } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\n\nconst Login = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    const { isLoggedIn } = useSelector((state) => state.auth);\n    const { message } = useSelector((state) => state.message);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(clearMessage());\n    }, [dispatch]);\n\n    const initialValues = {\n        username: \"\",\n        password: \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n        username: Yup.string().required(\"This field is required!\"),\n        password: Yup.string().required(\"This field is required!\"),\n    });\n\n    const handleLogin = (formValue) => {\n        const { username, password } = formValue;\n        setLoading(true);\n\n        dispatch(login({ username, password }))\n            .unwrap()\n            .then(() => {\n                props.history.push(\"/profile\");\n                window.location.reload();\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    return (\n        <div className=\"col-md-12 login-form\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleLogin}\n                >\n                    <Form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                            <ErrorMessage\n                                name=\"username\"\n                                component=\"div\"\n                                className=\"alert alert-danger\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                                className=\"alert alert-danger\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>\n                                {loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                )}\n                                <span>Login</span>\n                            </button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {message}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nconst Profile = () => {\n    const { user: currentUser } = useSelector((state) => state.auth);\n\n    if (!currentUser) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>\n                    <strong>{currentUser.username}</strong> Profile\n                </h3>\n            </header>\n            {/* <p>\n                <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n                {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n            </p> */}\n            {/* <p>\n                <strong>Id:</strong> {currentUser.id}\n            </p> */}\n            <p>\n                <strong>Email:</strong> {currentUser.email}\n            </p>\n            <strong>Authorities:</strong>\n            <ul>\n                {currentUser.roles &&\n                    currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n            </ul>\n        </div>\n    );\n};\n\nexport default Profile;","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { register } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\n\nconst Register = () => {\n    const [successful, setSuccessful] = useState(false);\n\n    const { message } = useSelector((state) => state.message);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(clearMessage());\n    }, [dispatch]);\n\n    const initialValues = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n        username: Yup.string()\n            .test(\n                \"len\",\n                \"The username must be between 3 and 20 characters.\",\n                (val) =>\n                    val &&\n                    val.toString().length >= 3 &&\n                    val.toString().length <= 20\n            )\n            .required(\"This field is required!\"),\n        email: Yup.string()\n            .email(\"This is not a valid email.\")\n            .required(\"This field is required!\"),\n        password: Yup.string()\n            .test(\n                \"len\",\n                \"The password must be between 6 and 40 characters.\",\n                (val) =>\n                    val &&\n                    val.toString().length >= 6 &&\n                    val.toString().length <= 40\n            )\n            .required(\"This field is required!\"),\n    });\n\n    const handleRegister = (formValue) => {\n        const { username, email, password } = formValue;\n\n        setSuccessful(false);\n\n        dispatch(register({ username, email, password }))\n            .unwrap()\n            .then(() => {\n                setSuccessful(true);\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    };\n\n    return (\n        <div className=\"col-md-12 table-responsive-md\">\n            <h4>Add Staff</h4>\n            <hr></hr>\n            <div className=\"col-md-12 signup-form\">\n\n\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        onSubmit={handleRegister}\n                    >\n                        <Form>\n                            {!successful && (\n                                <div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"username\">Username</label>\n                                        <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                                        <ErrorMessage\n                                            name=\"username\"\n                                            component=\"div\"\n                                            className=\"alert alert-danger\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\">Email</label>\n                                        <Field name=\"email\" type=\"email\" className=\"form-control\" />\n                                        <ErrorMessage\n                                            name=\"email\"\n                                            component=\"div\"\n                                            className=\"alert alert-danger\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"password\">Set Password</label>\n                                        <Field\n                                            name=\"password\"\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                        />\n                                        <ErrorMessage\n                                            name=\"password\"\n                                            component=\"div\"\n                                            className=\"alert alert-danger\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Create</button>\n                                    </div>\n                                </div>\n                            )}\n                        </Form>\n                    </Formik>\n                </div>\n\n                {message && (\n                    <div className=\"form-group\">\n                        <div\n                            className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\n                            role=\"alert\"\n                        >\n                            {message}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  deleteAllClients,\n  deleteClient,\n  findClientByName,\n  retrieveClients,\n} from \"../../slices/clients\";\n\nconst ClientList = () => {\n  const [searchName, setSearchName] = useState(\"\");\n  const clients = useSelector((state) => state.client);\n  const dispatch = useDispatch();\n\n  const onChangeSearchName = (e) => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const onSearchSubmit = (e) => {\n    if (e.code === \"Enter\") {\n      findByName();\n    }\n  };\n\n  const initFetch = useCallback(() => {\n    dispatch(retrieveClients());\n  }, [dispatch]);\n\n  useEffect(() => {\n    initFetch();\n  }, [initFetch]);\n\n  const removeClient = (id) => {\n    if (!window.confirm(\"Are you sure you want to delete the client ?\")) {\n      return;\n    }\n    dispatch(deleteClient({ id }))\n      .unwrap()\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const removeAllClients = () => {\n    if (!window.confirm(\"Are you sure you want to delete all clients ?\")) {\n      return;\n    }\n    dispatch(deleteAllClients()).catch((e) => {\n      console.log(e);\n    });\n  };\n\n  const findByName = () => {\n    dispatch(findClientByName({ name: searchName }));\n  };\n\n  return (\n    <div className=\" row\">\n      <div className=\"col-md-12\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Name\"\n            value={searchName}\n            onChange={onChangeSearchName}\n            onKeyPress={onSearchSubmit}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByName}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n        <h4>Client List</h4>\n      </div>\n      {/* client list table start */}\n      <div className=\"col-md-2 table-responsive-md\"></div>\n      <div className=\"col-md-8 tableFixHead\">\n        {clients && (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Client</th>\n                <th scope=\"col\" colSpan=\"2\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {clients.map((client, index) => {\n                return (\n                  <tr key={`client-row-${index}`}>\n                    <td>{index + 1}</td>\n                    <td>{client.name}</td>\n\n                    <td colSpan=\"2\">\n                      <div style={{ display: \"inline-flex\" }}>\n                        <Link\n                          to={\"/clients/\" + client.id}\n                          className=\"btn btn-sm btn-warning mr-2 mt-0\"\n                        >\n                          Edit\n                        </Link>\n                        <button\n                          className=\"btn btn-sm btn-danger mr-2 mt-0\"\n                          onClick={() => removeClient(client.id)}\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n      <div className=\"col-md-2 table-responsive-md\"></div>\n      {/* client list table end */}\n      <div className=\"col-md-10\">\n        {clients.length === 0 ? (\n          <div className=\"d-flex justify-content-center\">\n            <h5 className=\"text-center text-info\">No Records Found</h5>\n          </div>\n        ) : (\n          <div className=\"d-flex justify-content-end\">\n            <button\n              className=\"m-3 btn btn-sm btn-danger\"\n              onClick={removeAllClients}\n            >\n              Remove All\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ClientList;\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { clearMessage } from \"../../slices/message\";\n\nexport const ClientForm = (props) => {\n    const initialClientState = {\n        name: \"\",\n    };\n    const [loading, setLoading] = useState(false);\n    const { message } = useSelector((state) => state.message);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(clearMessage());\n    }, [dispatch]);\n\n    const saveClient = (formValues) => {\n        const { name } = formValues\n        setLoading(true)\n        props.saveClient({ name }).then(() => {\n            setLoading(false);\n        })\n    }\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required(\"This field is required!\"),\n    });\n    return (\n\n        <Formik\n            initialValues={initialClientState}\n            validationSchema={validationSchema}\n            onSubmit={saveClient}\n        >\n            <Form>\n                <div>\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name<sup className=\"text-center text-danger\">\n                            *</sup>:</label>\n                        <Field\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"name\"\n                            name=\"name\"\n                        />\n                        <ErrorMessage\n                            name=\"name\"\n                            component=\"div\"\n                            className=\"alert alert-danger\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                            {loading && !message && (\n                                <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                            <span>Submit</span>\n                        </button>\n                    </div>\n                </div ></Form></Formik>)\n}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createClient } from \"../../slices/clients\";\n// import AddIcon from '@mui/icons-material/Add';\nimport { ClientForm } from \"./ClientForm\";\n\nconst AddClient = () => {\n    const [submitted, setSubmitted] = useState(false);\n    const [clientList, setClientList] = useState([]);\n    const dispatch = useDispatch();\n\n    const saveClient = (client) => {\n        const { name } = client;\n        dispatch(createClient({ name }))\n            .unwrap()\n            .then(() => {\n                setClientList([]);\n                setSubmitted(true);\n            })\n            .catch(e => {\n                console.log(\"🚀 ~ file: AddClient.js ~ line 34 ~ saveClient ~ e\", e.message)\n            });\n    };\n\n    const initFetch = useCallback(async () => {\n        setClientList([<ClientForm key=\"client-1\" saveClient={saveClient} />]);\n    }, [dispatch])\n\n    useEffect(() => {\n        initFetch();\n    }, [initFetch])\n\n\n    const newClient = () => {\n        setClientList([...clientList, <ClientForm key=\"client-1\" saveClient={saveClient} />]);\n        setSubmitted(false);\n    };\n\n\n\n    return (\n        <div className=\"col-md-12 table-responsive-md\">\n            <h4>Add New Client</h4>\n            <hr></hr>\n            <div className=\"submit-form\" >\n                {submitted ? (\n                    <div>\n                        <h4>You submitted successfully!</h4>\n                        <button className=\"btn btn-success\" onClick={() => newClient()}>\n                            Add\n                        </button>\n                    </div>\n                ) :\n                    (<div className=\"row\">\n                        {/* <div >\n                        <button className=\"btn btn-success\" onClick={newClient}>\n                            Add <AddIcon />\n                        </button>\n                    </div> */}\n                        <div className=\"col-md-12\" style={{ display: 'flex', flexDirection: 'column' }} >\n                            {clientList.map(eachClient => eachClient)}\n                        </div>\n                    </div >)\n                }\n\n            </div >\n        </div>\n    );\n};\n\nexport default AddClient;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ClientService from \"../../services/client.service\";\nimport { updateClient } from \"../../slices/clients\";\n\nconst Client = (props) => {\n  const initialClientState = {\n    id: null,\n    name: \"\",\n  };\n  const [currentClient, setCurrentClient] = useState(initialClientState);\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const getClient = (id) => {\n    ClientService.get(id)\n      .then((response) => {\n        console.log(\"🚀 ~ file: Client.js:18 ~ .then ~ response:\", response);\n        setCurrentClient(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getClient(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCurrentClient({ ...currentClient, [name]: value });\n  };\n\n  const updateContent = () => {\n    dispatch(updateClient({ id: currentClient.id, data: currentClient }))\n      .unwrap()\n      .then((response) => {\n        console.log(\"🚀 ~ file: Client.js:38 ~ .then ~ response:\", response);\n        setMessage(\"The Client was updated successfully!\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  console.log(\n    \"🚀 ~ file: Client.js:86 ~ Client ~ currentClient:\",\n    currentClient\n  );\n  return (\n    <div className=\"col-md-12 table-responsive-md\">\n      <h4>Edit Client</h4>\n      <hr></hr>\n      {currentClient && (\n        <div className=\"edit-form\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                name=\"name\"\n                value={currentClient.name}\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-md mr-2 btn-success\"\n            onClick={updateContent}\n          >\n            Update\n          </button>\n          <button\n            className=\"btn btn-md btn-primary mr-2\"\n            onClick={() => props.history.push(\"/clientList\")}\n          >\n            {`< Go Back`}\n          </button>\n          <p>{message}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Client;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport UserService from \"../../services/user.service\";\nimport { updateUser } from \"../../slices/users\";\n\nconst User = (props) => {\n  const initialClientState = {\n    id: null,\n    name: \"\",\n  };\n  const [currentUser, setCurrentUser] = useState(initialClientState);\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const getUser = (id) => {\n    UserService.get(id)\n      .then((response) => {\n        console.log(\"🚀 ~ file: User.js:18 ~ .then ~ response:\", response);\n        setCurrentUser(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getUser(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCurrentUser({ ...currentUser, [name]: value });\n  };\n\n  const updateContent = () => {\n    dispatch(updateUser({ id: currentUser.id, data: currentUser }))\n      .unwrap()\n      .then((response) => {\n        console.log(\"🚀 ~ file: User.js:38 ~ .then ~ response:\", response);\n        setMessage(\"The User was updated successfully!\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  console.log(\"🚀 ~ file: User.js:86 ~ User ~ currentUser:\", currentUser);\n  return (\n    <div className=\"col-md-12 table-responsive-md\">\n      <h4>Edit User</h4>\n      <hr></hr>\n      {currentUser && (\n        <div className=\"edit-form\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                name=\"username\"\n                value={currentUser.username}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                value={currentUser.email}\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-md mr-2 btn-success\"\n            onClick={updateContent}\n          >\n            Update\n          </button>\n          <button\n            className=\"btn btn-md btn-primary mr-2\"\n            onClick={() => props.history.push(\"/staffList\")}\n          >\n            {`< Go Back`}\n          </button>\n          <p>{message}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  //   deleteAllusers,\n  //   deleteuser,\n  //   finduserByName,\n  findUserByName,\n  retrieveAllUsers,\n} from \"../../slices/users\";\n\nconst StaffList = () => {\n  const [searchName, setSearchName] = useState(\"\");\n  const { reviewers, users } = useSelector((state) => state.user);\n  console.log(\"🚀 ~ file: StaffList.js:15 ~ StaffList ~ users:\", users);\n  const dispatch = useDispatch();\n\n  const onChangeSearchName = (e) => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const onSearchSubmit = (e) => {\n    if (e.code === \"Enter\") {\n      findByName();\n    }\n  };\n\n  const initFetch = useCallback(() => {\n    dispatch(retrieveAllUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    initFetch();\n  }, [initFetch]);\n\n  //   const removeuser = (id) => {\n  //     if (!window.confirm(\"Are you sure you want to delete the user ?\")) {\n  //       return;\n  //     }\n  //     dispatch(deleteuser({ id }))\n  //       .unwrap()\n  //       .catch((e) => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const removeAllusers = () => {\n  //     if (!window.confirm(\"Are you sure you want to delete all users ?\")) {\n  //       return;\n  //     }\n  //     dispatch(deleteAllusers()).catch((e) => {\n  //       console.log(e);\n  //     });\n  //   };\n\n  const findByName = () => {\n    dispatch(findUserByName({ name: searchName }));\n  };\n\n  return (\n    <div className=\" row\">\n      <div className=\"col-md-12\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by description\"\n            value={searchName}\n            onChange={onChangeSearchName}\n            onKeyPress={onSearchSubmit}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByName}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n        <h4>user List</h4>\n      </div>\n      {/* user list table start */}\n      <div className=\"col-md-2 table-responsive-md\"></div>\n      <div className=\"col-md-8 tableFixHead\">\n        {users && (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">user</th>\n                <th scope=\"col\" colSpan=\"2\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, index) => {\n                return (\n                  <tr key={`user-row-${index}`}>\n                    <td>{index + 1}</td>\n                    <td>{user.username}</td>\n\n                    <td colSpan=\"2\">\n                      <div style={{ display: \"inline-flex\" }}>\n                        <Link\n                          to={\"/users/\" + user.id}\n                          className=\"btn btn-sm btn-warning mr-2 mt-0\"\n                        >\n                          Edit\n                        </Link>\n                        <button\n                          className=\"btn btn-sm btn-danger mr-2 mt-0\"\n                          onClick\n                        >\n                          Deactivate\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n      <div className=\"col-md-2 table-responsive-md\"></div>\n      {/* user list table end */}\n      <div className=\"col-md-10\">\n        {users.length === 0 && (\n          <div className=\"d-flex justify-content-center\">\n            <h5 className=\"text-center text-info\">No Users Found</h5>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StaffList;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport AddTask from \"components/Tasks/AddTask\";\nimport Task from \"components/Tasks/Task\";\nimport TasksList from \"components/Tasks/TasksList\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport EventBus from \"./common/EventBus\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport Register from \"./components/Register\";\nimport { history } from \"./helpers/history\";\nimport { logout } from \"./slices/auth\";\nimport { clearMessage } from \"./slices/message\";\nimport AuthVerify from \"./common/AuthVerify\";\nimport ClientList from \"components/clients/ClientList\";\nimport AddClient from \"components/clients/AddClient\";\nimport Client from \"components/clients/Client\";\nimport User from \"components/users/User\";\nimport StaffList from \"components/users/StaffList\";\nimport { capitalize } from \"lodash\";\n\nconst App = () => {\n  // const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      // setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    } else {\n      // setShowModeratorBoard(false);\n      setShowAdminBoard(false);\n    }\n\n    EventBus.on(\"logout\", () => {\n      logOut();\n    });\n\n    return () => {\n      EventBus.remove(\"logout\");\n    };\n  }, [currentUser, logOut]);\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\n          <div className=\"container-fluid\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              KRMN & Associates\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                {currentUser && (\n                  <React.Fragment>\n                    <li className=\"nav-item dropdown\">\n                      <div\n                        className=\"nav-link dropdown-toggle\"\n                        id=\"navbarDropdown1\"\n                        role=\"button\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-expanded=\"false\"\n                      >\n                        Tasks\n                      </div>\n                      <ul\n                        className=\"dropdown-menu\"\n                        aria-labelledby=\"navbarDropdown1\"\n                      >\n                        <li>\n                          <Link\n                            to={\"/taskList\"}\n                            className=\"dropdown-item\"\n                            href=\"#\"\n                          >\n                            Task List\n                          </Link>\n                        </li>\n                        <li>\n                          <Link\n                            to={\"/addTask\"}\n                            className=\"dropdown-item\"\n                            href=\"#\"\n                          >\n                            Add Task\n                          </Link>\n                        </li>\n                      </ul>\n                    </li>\n\n                    {showAdminBoard && (\n                      <React.Fragment>\n                        <li className=\"nav-item dropdown\">\n                          <div\n                            className=\"nav-link dropdown-toggle\"\n                            id=\"navbarDropdown2\"\n                            role=\"button\"\n                            data-bs-toggle=\"dropdown\"\n                            aria-expanded=\"false\"\n                          >\n                            Clients\n                          </div>\n                          <ul\n                            className=\"dropdown-menu\"\n                            aria-labelledby=\"navbarDropdown2\"\n                          >\n                            <li>\n                              <Link\n                                to={\"/clientList\"}\n                                className=\"dropdown-item\"\n                                href=\"#\"\n                              >\n                                Client List\n                              </Link>\n                            </li>\n                            <li>\n                              <Link\n                                to={\"/addClient\"}\n                                className=\"dropdown-item\"\n                                href=\"#\"\n                              >\n                                Add Client\n                              </Link>\n                            </li>\n                          </ul>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                          <div\n                            className=\"nav-link dropdown-toggle\"\n                            id=\"navbarDropdown2\"\n                            role=\"button\"\n                            data-bs-toggle=\"dropdown\"\n                            aria-expanded=\"false\"\n                          >\n                            Staff\n                          </div>\n                          <ul\n                            className=\"dropdown-menu\"\n                            aria-labelledby=\"navbarDropdown2\"\n                          >\n                            <li>\n                              <Link\n                                to={\"/staffList\"}\n                                className=\"dropdown-item\"\n                                href=\"#\"\n                              >\n                                Staff List\n                              </Link>\n                            </li>\n                            <li>\n                              <Link\n                                to={\"/register\"}\n                                className=\"dropdown-item\"\n                                href=\"#\"\n                              >\n                                Add Staff\n                              </Link>\n                            </li>\n                          </ul>\n                        </li>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </ul>\n              <ul className=\"navbar-nav mr\">\n                {currentUser ? (\n                  <React.Fragment>\n                    <li className=\"nav-item dropdown\">\n                      <div\n                        className=\"nav-link dropdown-toggle\"\n                        href=\"#\"\n                        id=\"navbarDropdown2\"\n                        role=\"button\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-expanded=\"false\"\n                      >\n                        Hello {capitalize(currentUser.username)}\n                      </div>\n                      <ul\n                        className=\"dropdown-menu\"\n                        aria-labelledby=\"navbarDropdown2\"\n                      >\n                        <li>\n                          <Link\n                            to={\"/profile\"}\n                            className=\"dropdown-item\"\n                            href=\"#\"\n                          >\n                            Profile\n                          </Link>\n                        </li>\n                        <li>\n                          <a\n                            href=\"/login\"\n                            className=\"dropdown-item\"\n                            onClick={logOut}\n                          >\n                            LogOut\n                          </a>\n                        </li>\n                      </ul>\n                    </li>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    <li className=\"nav-item\">\n                      <Link to={\"/login\"} className=\"nav-link\">\n                        Login\n                      </Link>\n                    </li>\n                  </React.Fragment>\n                )}\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/taskList\" component={TasksList} />\n            <Route path=\"/addTask\" component={AddTask} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n            <Route path=\"/tasks/:id\" component={Task} />\n            <Route path=\"/clientList\" component={ClientList} />\n            <Route path=\"/addClient\" component={AddClient} />\n            <Route path=\"/clients/:id\" component={Client} />\n            <Route path=\"/staffList\" component={StaffList} />\n            <Route path=\"/users/:id\" component={User} />\n          </Switch>\n        </div>\n        <AuthVerify logOut={logOut} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from \"./slices/auth\";\nimport messageReducer from \"./slices/message\";\nimport tasksReducer from './slices/tasks';\nimport userReducer from './slices/users';\nimport clientReducer from './slices/clients';\n\nconst reducer = {\n    auth: authReducer,\n    message: messageReducer,\n    tasks: tasksReducer,\n    user: userReducer,\n    client: clientReducer,\n}\n\nconst store = configureStore({\n    reducer: reducer,\n    devTools: true,\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport { HashRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/#\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();"],"sourceRoot":""}